{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Strings/Strings.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/failure/failure.component.css","webpack:///./src/app/failure/failure.component.html","webpack:///./src/app/failure/failure.component.ts","webpack:///./src/app/first-page/first-page.component.css","webpack:///./src/app/first-page/first-page.component.html","webpack:///./src/app/first-page/first-page.component.ts","webpack:///./src/app/http-conn.service.ts","webpack:///./src/app/payment/payment.component.css","webpack:///./src/app/payment/payment.component.html","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/seats/seat.ts","webpack:///./src/app/seats/seats.component.css","webpack:///./src/app/seats/seats.component.html","webpack:///./src/app/seats/seats.component.ts","webpack:///./src/app/success/success.component.css","webpack:///./src/app/success/success.component.html","webpack:///./src/app/success/success.component.ts","webpack:///./src/app/ticket-storing.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;ACZO,IAAM,KAAK,GAAC;IACf,aAAa,EAAC,WAAW;IACzB,QAAQ,EAAC,OAAO;IAChB,WAAW,EAAC,SAAS;IACrB,WAAW,EAAC,SAAS;IACrB,WAAW,EAAC,SAAS;IACrB,SAAS,EAAC,wBAAwB;IAClC,SAAS,EAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;IAC3B,KAAK,EAAC,GAAG;IACT,aAAa,EAAC,QAAQ;IACtB,UAAU,EAAC,WAAW;IACtB,YAAY,EAAC,QAAQ;CAExB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbuC;AACc;AACE;AACM;AACA;AACA;AACQ;AAC7B;AAG1C,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,GAAG,sDAAK,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;IACtE,EAAE,IAAI,EAAE,sDAAK,CAAC,aAAa,EAAE,SAAS,EAAE,mFAAkB,EAAE;IAC5D,EAAE,IAAI,EAAE,sDAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,qEAAc,EAAE;IACnD,EAAE,IAAI,EAAE,sDAAK,CAAC,WAAW,EAAE,SAAS,EAAE,2EAAgB,EAAE;IACxD,EAAE,IAAI,EAAE,sDAAK,CAAC,WAAW,EAAE,SAAS,EAAE,2EAAgB,EAAE;IACxD,EAAE,IAAI,EAAE,sDAAK,CAAC,WAAW,EAAE,SAAS,EAAE,2EAAgB,EAAE;CACzD,CAAC;AAUF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAR5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAGrC;YAED,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;AACtB,IAAM,UAAU,GAAG,CAAC,mFAAkB;IAC3C,qEAAc;IACd,2EAAgB;IAChB,2EAAgB;IAChB,2EAAgB;CACjB,CAAC;;;;;;;;;;;;ACjCF,mB;;;;;;;;;;;ACAA,wD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,oBAAoB,CAAC;IAC/B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AACK;AACuB;AACrB;AACS;AACqB;AAyB7E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8DAAU;aAEX;YACD,OAAO,EAAE;gBAEP,4FAAuB;gBACvB,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;aAGjB;YACD,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/BtB,mB;;;;;;;;;;;ACAA,k1B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACe;AACtB;AACF;AAMzC;IAEE,0BAAoB,GAAwB,EAAU,MAAa;QAA/C,QAAG,GAAH,GAAG,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAExE,mCAAQ,GAAR;QACE,EAAE,EAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,MAAM,IAAE,sDAAK,CAAC,UAAU,CAAC,EAAC;YAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,QAAQ,EAAC,EAAC,SAAS,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACvD,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IATU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAGwB,4EAAoB,EAAiB,sDAAM;OAFxD,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;ACT7B,mB;;;;;;;;;;;ACAA,+7E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACE;AAO3C;IAEE,4BAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAEtC,kCAAK,GAAL,UAAM,SAAS;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,QAAQ,EAAC,EAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IACD,qCAAQ,GAAR;IACA,CAAC;IARU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAG2B,sDAAM;OAFtB,kBAAkB,CAU9B;IAAD,yBAAC;CAAA;AAV8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AACO;AACR;AAY1C;IAGE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,aAAQ,GAAG,sDAAK,CAAC,SAAS;IAG1B,CAAC;IAED,6CAAmB,GAAnB,UAAoB,IAAI;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,sBAAsB,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjF,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAI;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,kCAAQ,GAAR,UAAS,QAAQ;QACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,GAAG,YAAY,EAAE,EAAE,QAAQ,YAAE,CAAC,CAAC;IACzE,CAAC;IAhBU,eAAe;QAJ3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAHzB,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;;;;;ACd5B,mB;;;;;;;;;;;ACAA,4qBAA4qB,WAAW,iKAAiK,MAAM,iKAAiK,WAAW,kvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx9B;AACe;AACtB;AACY;AACU;AAOjE;IA8BE,0BAAoB,GAAwB,EAAS,IAAoB,EAAU,KAAoB,EAAU,MAAa;QAA1G,QAAG,GAAH,GAAG,CAAqB;QAAS,SAAI,GAAJ,IAAI,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;QALvH,aAAQ,GAAC,EAAE,CAAC;QACZ,cAAS,GAAC,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;QACpB,SAAI,GAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC;QACxD,cAAS,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,EAAE,CAAC,CAAC;QACtC,cAAS,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,CAAC;IAC6F,CAAC;IA5BnI,sCAAW,GAAX;QAAA,iBAcC;QAbC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzC,cAAI;YACF,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,sDAAK,CAAC,aAAa,CAAC,CAAC;YACxC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAC5C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,sDAAK,CAAC,UAAU,CAAC,CAAC;YACrC,yBAAyB;YACzB,4CAA4C;YAC5C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAC5C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,sDAAK,CAAC,UAAU,CAAC,CAAC;QACnC,yBAAyB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9C,CAAC;IASD,gCAAK,GAAL;QAKE,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YAChB,KAAK,GAAG;gBAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC,EAAC;oBACtD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAAA,IAAI,EAAC;oBACJ,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBACD,KAAK,CAAC;YACN,KAAK,GAAG;gBACR,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC,EAAC;oBAC7C,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAAA,IAAI,EAAC;oBACJ,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBACD,KAAK,CAAC;QACR,CAAC;IACH,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;QAC5C,EAAE,EAAC,IAAI,CAAC,QAAQ,IAAE,EAAE,CAAC,EAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IA1DU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCA+BwB,4EAAoB,EAAc,kEAAe,EAAgB,8DAAc,EAAiB,sDAAM;OA9BnH,gBAAgB,CA4D5B;IAAD,uBAAC;CAAA;AA5D4B;;;;;;;;;;;;;;ACX7B;AAAA;IAKI,mBAAY,GAAG,EAAC,MAAM,EAAC,MAAM;QACzB,IAAI,CAAC,GAAG,GAAC,GAAG,CAAC;QACb,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;QACnB,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;QACnB,IAAI,CAAC,OAAO,GAAC,EAAC,MAAM,EAAC,IAAI,EAAC,UAAU,EAAC,KAAK,EAAC,cAAc,EAAC,KAAK,EAAC,CAAC;IACrE,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;ACXD,mB;;;;;;;;;;;ACAA,2WAA2W,iBAAiB,4xBAA4xB,8GAA8G,cAAc,+LAA+L,eAAe,mQAAmQ,eAAe,oQAAoQ,eAAe,ulBAAulB,UAAU,ivCAAivC,qBAAqB,GAAG,eAAe,ubAAub,2BAA2B,wX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhyI;AACf;AACgC;AACZ;AACZ;AACsB;AAOjE;IAeE,wBAAoB,GAAyB,EAAU,MAAc,EAAU,KAAqB,EAAU,IAAqB;QAA/G,QAAG,GAAH,GAAG,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAiB;QAV5H,SAAI,GAAG,sDAAK,CAAC,KAAK,CAAC;QACnB,eAAU,GAAG,KAAK,CAAC;QACnB,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,sDAAK,CAAC,SAAS,CAAC;QAC5B,UAAK,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACzB,kBAAa,GAAG,EAAE,CAAC;QACnB,aAAQ,GAAG,CAAC,CAAC;QAIlB,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YACvD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QACxC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAElC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;QAChB,CAAC;QACD,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;YACf,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,KAAe,IAAK,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAhD,CAAgD,CAAC,CAAC;QACrG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;aACrC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,iBAAO;YAC7C,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QACzE,CAAC,CAAC,EAFiB,CAEjB,CAAC,CAAC;QACN,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,kCAAS,GAAT,UAAU,GAAG,EAAE,GAAG;QAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5B,GAAG,CAAC,IAAI,CAAC,IAAI,+CAAS,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAO;YAChC,OAAO,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAO;YACxB,OAAO,CAAC,OAAO,CAAC,aAAG;gBACjB,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC7B,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;YACtC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,GAAG,EAAE,GAAG,CAAC;QACb,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YACvD,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClC,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;YAC3B,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACd,GAAG,GAAG,KAAK,CAAC;gBACZ,KAAK,CAAC;YACR,CAAC;QACH,CAAC;QACD,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,mCAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,sCAAa,GAAb,UAAc,IAAI;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,gCAAO,GAAP,UAAQ,IAAI;QACV,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,mCAAU,GAAV,UAAW,IAAI;QACb,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,CAAC,GAAG,IAAI,CAAC;QACb,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;QACxB,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC;gBAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACtF,KAAK,CAAC;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvC,CAAC,EAAE,CAAC;YACN,CAAC;QACH,CAAC;IACH,CAAC;IAED,kCAAS,GAAT;QAAA,iBA4BC;QA3BC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC/C,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAO;gBAChC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;YACH,IAAI,MAAM,GAAG;gBACX,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,EAAE,EAAE,IAAI,CAAC,KAAK;gBACd,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB;YACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAClC,cAAI;gBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACzB,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,sDAAK,CAAC,YAAY,CAAC,CAAC;gBACvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5C,CAAC,EACD,eAAK;gBACH,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE9C,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC;IACH,CAAC;IAED,mCAAU,GAAV;QAAA,iBAOC;QANC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,yBAAyB;QACzB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,iBAAO;YACrF,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QACzE,CAAC,CAAC,EAFyD,CAEzD,CAAC,CAAC;IACN,CAAC;IAED,oCAAW,GAAX,UAAY,IAAI;QAEd,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QACnC,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;QAC7C,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC;YAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACtF,KAAK,CAAC;YACR,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;YACjD,CAAC,EAAE,CAAC;QACN,CAAC;IACH,CAAC;IAED,sCAAa,GAAb,UAAc,IAAI;QAChB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QACnC,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;QAC7C,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC;YAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;oBAC5C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACpD,IAAI;oBACF,KAAK,CAAC;YAEV,CAAC,EAAE,CAAC;QACN,CAAC;IACH,CAAC;IA1LU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAgByB,4EAAoB,EAAkB,sDAAM,EAAiB,8DAAc,EAAgB,kEAAe;OAfxH,cAAc,CA4L1B;IAAD,qBAAC;CAAA;AA5L0B;;;;;;;;;;;;ACZ3B,mB;;;;;;;;;;;ACAA,ghBAAghB,aAAa,yPAAyP,2CAA2C,2hBAA2hB,cAAc,iK;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxzC;AACiB;AACF;AACtB;AAO3C;IAGE,0BAAoB,GAAwB,EAAS,KAAoB,EAAS,MAAa;QAA3E,QAAG,GAAH,GAAG,CAAqB;QAAS,UAAK,GAAL,KAAK,CAAe;QAAS,WAAM,GAAN,MAAM,CAAO;QADxF,cAAS,GAAC,sDAAK,CAAC,SAAS,CAAC;IACgE,CAAC;IAClG,mCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACjC,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAE,EAAE,CAAC,EAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sDAAK,CAAC,QAAQ,EAAC,EAAC,SAAS,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACvD,CAAC;IAEH,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAdU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAIwB,4EAAoB,EAAe,8DAAc,EAAgB,sDAAM;OAHpF,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA;AAhB4B;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AAM3C;IAgCE;QA9BQ,WAAM,GAAC;YACb,QAAQ,EAAC,IAAI;YACb,KAAK,EAAC,IAAI;YACV,IAAI,EAAC,IAAI;YACT,KAAK,EAAC,IAAI;YACV,MAAM,EAAC,IAAI;SACZ,CAAC;IAwBc,CAAC;IAtBjB,0CAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAC,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,IAAI,CAAC;IAC1B,CAAC;IAED,wCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,MAAM,CAAC;IAC5B,CAAC;IAED,wCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAC,MAAM,CAAC,GAAG,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;IACxC,CAAC;IAED,wCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IA/BU,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,oBAAoB,CAiChC;IAAD,2BAAC;CAAA;AAjCgC;;;;;;;;;;;;;;ACNjC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export const paths={\n    firstPagePath:\"firstPage\",\n    seatPath:\"seats\",\n    paymentPath:\"payment\",\n    successPath:\"success\",\n    failurePath:\"failure\",\n    serverUrl:\"http://localhost:1234/\",\n    rowLetter:['A','B','C','D'],\n    prize:300,\n    successStatus:\"booked\",\n    failStatus:\"discarded\",\n    lockedStatus:\"locked\"\n\n};","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SeatsComponent } from './seats/seats.component';\nimport { SuccessComponent } from './success/success.component';\nimport { FailureComponent } from './failure/failure.component';\nimport { PaymentComponent } from './payment/payment.component';\nimport { FirstPageComponent } from './first-page/first-page.component';\nimport { paths } from './Strings/Strings';\n\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/\" + paths.firstPagePath, pathMatch: \"full\" },\n  { path: paths.firstPagePath, component: FirstPageComponent },\n  { path: paths.seatPath, component: SeatsComponent },\n  { path: paths.paymentPath, component: PaymentComponent },\n  { path: paths.successPath, component: SuccessComponent },\n  { path: paths.failurePath, component: FailureComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes),\n\n\n  ],\n\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const components = [FirstPageComponent,\n  SeatsComponent,\n  PaymentComponent,\n  SuccessComponent,\n  FailureComponent\n];\n","module.exports = \"\"","module.exports = \"<router-outlet>\\n\\n</router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ticket Booking App';\n}\n","\nimport { NgModule} from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { AppRoutingModule, components } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {  HttpClientModule} from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    components\n\n  ],\n  imports: [\n    \n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    \n\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid seats-container p-5\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"card shadow-lg\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12 text-center\\\">\\n                                <i class=\\\"far fa-times-circle fa-7x text-danger\\\"></i>\\n                                <br/>\\n                                <h4 class=\\\"text-dark my-5\\\">Oops! Payment Failed. Better luck next time!</h4>\\n                                <p class=\\\"text-muted\\\"><i class=\\\"fa fa-thumbs-up\\\"></i> Be calm, Solve puzzle to win tickets</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TicketStoringService } from '../ticket-storing.service';\nimport { paths } from '../Strings/Strings';\nimport {  Router} from '@angular/router';\n@Component({\n  selector: 'app-failure',\n  templateUrl: './failure.component.html',\n  styleUrls: ['./failure.component.css']\n})\nexport class FailureComponent implements OnInit {\n\n  constructor(private tss:TicketStoringService, private router:Router) { }\n\n  ngOnInit() {\n    if(this.tss.getTicket().status!=paths.failStatus){\n      this.router.navigate([paths.seatPath,{noOfSeats:1}]);\n    }\n    this.tss.resetTicket();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <img src=\\\"assets/images/banner.png\\\" class=\\\"img-fluid\\\">\\n    <div class=\\\"my-5 text-center\\\">\\n        <h1>Book Tickets for event now, Limited Seats :)</h1>\\n        <p class=\\\"text-muted\\\">\\n            For 18+ years old people only, Need to carry your goverment Identity for event. No cancellation of sold tickets.\\n        </p>\\n    </div>\\n\\n    <div class=\\\"card-deck mb-3 text-center\\\">\\n        <div class=\\\"card mb-4 shadow-sm\\\">\\n            <div class=\\\"card-header\\\">\\n                <h4 class=\\\"my-0 font-weight-normal\\\">Single Person</h4>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <h2 class=\\\"card-title pricing-card-title\\\">\\n                    <i class=\\\"fas fa-rupee-sign\\\"></i> 300\\n                </h2>\\n                <button (click)=seats(1) class=\\\"btn btn-lg btn-block btn-outline-primary\\\">Proceed</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card mb-4 shadow-sm\\\">\\n            <div class=\\\"card-header\\\">\\n                <h4 class=\\\"my-0 font-weight-normal\\\">2 People</h4>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <h2 class=\\\"card-title pricing-card-title\\\">\\n                    <i class=\\\"fas fa-rupee-sign\\\"></i> 600\\n                </h2>\\n                <button (click)=seats(2) class=\\\"btn btn-lg btn-block btn-outline-primary\\\">Proceed</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card mb-4 shadow-sm\\\">\\n            <div class=\\\"card-header\\\">\\n                <h4 class=\\\"my-0 font-weight-normal\\\">3 People</h4>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <h2 class=\\\"card-title pricing-card-title\\\">\\n                    <i class=\\\"fas fa-rupee-sign\\\"></i> 900\\n                </h2>\\n                <button (click)=seats(3) class=\\\"btn btn-lg btn-block btn-outline-primary\\\">Proceed</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card mb-4 shadow-sm\\\">\\n            <div class=\\\"card-header\\\">\\n                <h4 class=\\\"my-0 font-weight-normal\\\">5 People</h4>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <h2 class=\\\"card-title pricing-card-title\\\">\\n                    <i class=\\\"fas fa-rupee-sign\\\"></i> 1500\\n                </h2>\\n                <button (click)=seats(5) class=\\\"btn btn-lg btn-block btn-outline-primary\\\">Proceed</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { paths } from '../Strings/Strings';\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.css']\n})\nexport class FirstPageComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  seats(noOfSeats){\n    this.router.navigate([paths.seatPath,{noOfSeats:noOfSeats}]);\n  }\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { paths } from './Strings/Strings';\n\nimport { Observable } from 'rxjs';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpConnService {\n  BASE_URL = paths.serverUrl\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUnavailableSeats(date) {\n    return this.http.get(this.BASE_URL + \"getUnavailableSeats/\" + date.toString());\n  }\n\n  lockSeat(seat) {\n    return this.http.post<any>(this.BASE_URL + \"lockSeat\", seat);\n  }\n\n  bookSeat(ticketId) {\n    return this.http.post<any>(this.BASE_URL + \"bookTicket\", { ticketId });\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid seats-container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 offset-md-1\\\">\\n            <div class=\\\"card shadow-sm\\\">\\n                <div class=\\\"card-header\\\">\\n                    <span class=\\\"heading\\\">Solve puzzle to Make Payment\\n                    </span>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 pt-2\\\">\\n                                <div class=\\\"d-flex justify-content-center\\\">\\n                                        <div class=\\\"numbers\\\">\\n                                            {{maxNumber}}\\n                                        </div>\\n                                        <div class=\\\"numbers\\\">\\n                                            {{sign}}\\n                                        </div>\\n                                        <div class=\\\"numbers\\\">\\n                                            {{minNumber}}\\n                                        </div>\\n                                    </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <label>Your Answer:</label>\\n                            <input [(ngModel)]=\\\"answer\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Answer\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"text-center mt-5\\\">\\n                        <button (click)=check() type=\\\"button\\\" class=\\\"btn btn-success btn-lg\\\">Confirm my seats</button>\\n                    </div>\\n                    \\n                    \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { paths } from '../Strings/Strings';\nimport { HttpConnService } from '../http-conn.service';\nimport { TicketStoringService } from '../ticket-storing.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  rightAnswer(){\n    this.http.bookSeat(this.ticketId).subscribe(\n      data=>{\n        this.tss.setStatus(paths.successStatus);\n        this.router.navigate([paths.successPath]);\n      },\n      error=>{\n        this.tss.setStatus(paths.failStatus);\n        //this.tss.resetTicket();\n        //alert(\"Cannot Book!!!\"+error.error.error);\n        console.log(error);\n        this.router.navigate([paths.failurePath]);\n      }\n    );\n  }\n\n  wrongAnswer(){\n    this.tss.setStatus(paths.failStatus);\n      //this.tss.resetTicket();\n      this.router.navigate([paths.failurePath]);\n  }\n\n  public answer;\n  public ticketId=\"\";\n  public signArray=['-','+'];\n  public sign=this.signArray[Math.floor(Math.random()*2)];\n  maxNumber=Math.ceil(Math.random()*20);\n  minNumber=Math.ceil(Math.random()*2);\n  constructor(private tss:TicketStoringService,private http:HttpConnService, private route:ActivatedRoute, private router:Router) { }\n  check(){\n   \n\n  \n\n    switch(this.sign){\n      case '-':if(this.answer==this.maxNumber-this.minNumber){\n        this.rightAnswer();\n      }else{\n        this.wrongAnswer();\n      }\n      break;\n      case '+':\n      if(this.answer==this.maxNumber+this.minNumber){\n        this.rightAnswer();\n      }else{\n        this.wrongAnswer();\n      }\n      break;\n    }\n  }\n\n  ngOnInit() {\n    this.ticketId=this.tss.getTicket().ticketID;\n    if(this.ticketId==\"\"){\n      this.router.navigate([paths.seatPath]);\n    }\n  }\n\n}\n","export class seatClass{\n    row:String;\n    number:number;\n    status:String;\n    classes:{};\n    constructor(row,number,status){\n        this.row=row;\n        this.number=number;\n        this.status=status;\n        this.classes={\"seat\":true,\"selected\":false,\"no-available\":false};\n    }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid seats-container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 offset-md-1\\\">\\n            <div class=\\\"card shadow-sm\\\">\\n                <div class=\\\"card-header\\\">\\n                        <span class=\\\"float-right\\\">\\n                                <input type=\\\"date\\\" (change)=changeDate() min={{todayDateString}} [(ngModel)]=date>\\n                        </span>\\n\\n\\n                    <span class=\\\"heading\\\">Select your seats</span>\\n                    <span class=\\\"float-right\\\">\\n                        <select (change)=chengedVal() [(ngModel)]=maxSeats class=\\\"custom-select\\\">\\n                                <option value=1>Single Person</option>\\n                                <option value=2>Two People</option>\\n                                <option value=3>Three People</option>\\n                                <option value=5>Five People</option>\\n                                </select>\\n                    </span>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <!-- Seats container -->\\n                    <div *ngFor=\\\"let row of seats; let i=index\\\" class=\\\"d-flex flex-row mb-3 seats\\\">\\n                        <div  class=\\\"mr-2 seat-row\\\">{{rowLetter[i]}}</div>\\n                        <div *ngFor=\\\"let seat of row | slice:0:5\\\" (click)=selectSeat(seat) (mouseover)=seatHovered(seat) (mouseout)=seatUnhovered(seat) [ngClass]=\\\"seat.classes\\\">{{seat.number+1}}</div>\\n                        <div class=\\\"mr-4  seat-divider\\\"> </div>\\n                        <div *ngFor=\\\"let seat of row | slice:5:15\\\" (click)=selectSeat(seat) (mouseover)=seatHovered(seat) (mouseout)=seatUnhovered(seat) [ngClass]=\\\"seat.classes\\\">{{seat.number+1}}</div>\\n                        <div class=\\\"mr-4  seat-divider\\\"> </div>\\n                        <div *ngFor=\\\"let seat of row | slice:15:25\\\" (click)=selectSeat(seat) (mouseover)=seatHovered(seat) (mouseout)=seatUnhovered(seat) [ngClass]=\\\"seat.classes\\\">{{seat.number+1}}</div>\\n                    </div>\\n\\n                    \\n                           <div class=\\\"text-center my-5\\\">\\n                        <img src=\\\"assets/images/screen.png\\\"> <br/>\\n                        <span class=\\\"text-muted small\\\">All eyes this way please!</span>\\n                    </div>\\n                    <div *ngIf=isSelected class=\\\"row m-2\\\">\\n                        <div class=\\\"col-md-12 p-0\\\">\\n                            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n                                <i class=\\\"fa fa-exclamation-triangle\\\"></i> Please select {{maxSeats}} seat\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n\\n\\n                    <div class=\\\"row payment-holder m-2\\\">\\n                        <div class=\\\"col-md-4 p-3\\\">\\n                            <form #userForm=\\\"ngForm\\\" novalidate>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Name</label>\\n                                    <input [(ngModel)]=name type=\\\"text\\\" name=name class=\\\"form-control\\\" ngModel required>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Email</label>\\n                                    <input [(ngModel)]=email type=\\\"email\\\" name=email class=\\\"form-control\\\" ngModel required>\\n                                </div>\\n                            </form>\\n                           \\n                        </div>\\n                        <div class=\\\"col-md-8 p-3\\\" >\\n                            <div class=\\\"mt-5\\\">\\n                                <h5 class=\\\"text-center\\\">Your Seats Selection:\\n                                    <span class=\\\"badge badge-secondary mr-2\\\" *ngFor=\\\"let seat of selectedSeats\\\">{{rowLetter[seat.row]}}-{{seat.number+1}}</span>\\n                                    \\n                                </h5>\\n                                <div class=\\\"row mt-3\\\">\\n                                    <div class=\\\"col-sm-6 offset-sm-3 text-center\\\">\\n                                        <button type=\\\"button\\\" [disabled]=\\\"userForm.form.invalid\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"lockSeats()\\\">Pay <i class=\\\"fa fa-rupee-sign\\\"></i> {{rate*selectedSeats.length}}</button>\\n                                    </div>\\n                                    \\n                                </div>\\n                            </div>\\n\\n                        </div>\\n\\n                    </div>\\n                    <!-- Confirmation box ends here-->\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { seatClass } from './seat';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { HttpConnService } from '../http-conn.service';\nimport { paths } from '../Strings/Strings';\nimport { TicketStoringService } from \"../ticket-storing.service\";\n\n@Component({\n  selector: 'app-seats',\n  templateUrl: './seats.component.html',\n  styleUrls: ['./seats.component.css']\n})\nexport class SeatsComponent implements OnInit {\n\n  public todayDate;\n  public todayDateString;\n  public date;\n  public rate = paths.prize;\n  public isSelected = false;\n  public name = \"\";\n  public email = \"\";\n  public rowLetter = paths.rowLetter;\n  public seats = [[], [], [], []];\n  public selectedSeats = [];\n  public maxSeats = 2;\n\n  \n  constructor(private tss: TicketStoringService, private router: Router, private route: ActivatedRoute, private http: HttpConnService) {\n    for (let index = 0; index < this.seats.length; index++) {\n      this.initSeats(this.seats[index], index);\n    }\n  }\n\n  ngOnInit() {\n    this.todayDate = new Date()\n    var year = this.todayDate.getFullYear();\n    var month = this.todayDate.getMonth() + 1;\n    var dt = this.todayDate.getDate();\n\n    if (dt < 10) {\n      dt = '0' + dt;\n    }\n    if (month < 10) {\n      month = '0' + month;\n    }\n    this.todayDateString = this.date = year + '-' + month + '-' + dt;\n    this.route.paramMap.subscribe((param: ParamMap) => this.maxSeats = parseInt(param.get('noOfSeats')));\n    this.http.getUnavailableSeats(this.date)\n      .subscribe(data => data[\"data\"].forEach(element => {\n        this.seats[element.row][element.number].classes[\"no-available\"] = true;\n      }));\n    if (!this.maxSeats)\n      this.maxSeats = 1;\n  }\n  \n  initSeats(arr, row) {\n    for (let i = 0; i < 25; i++) {\n      arr.push(new seatClass(row, i, \"seat\"));\n    }\n  }\n\n  chengedVal() {\n    this.selectedSeats.forEach(element => {\n      element.classes.selected = false;\n    });\n    this.selectedSeats = [];\n  }\n\n  resetSeats() {\n    this.seats.forEach(element => {\n      element.forEach(ele => {\n        ele.classes.selected = false;\n        ele.classes[\"no-available\"] = false;\n      });\n    });\n  }\n\n  getindex(seat) {\n    var row, num;\n    for (let index = 0; index < this.seats.length; index++) {\n      const element = this.seats[index];\n      num = element.indexOf(seat)\n      if (num != -1) {\n        row = index;\n        break;\n      }\n    }\n    return { row: row, num: num };\n  }\n\n  removeSeat(index) {\n    this.selectedSeats[index].classes.selected = false;\n    this.selectedSeats.splice(index, 1);\n    if (this.selectedSeats.length < 1) {\n      this.isSelected = false;\n    }\n  }\n\n  addToSelected(seat) {\n    this.isSelected = false;\n    seat.classes.selected = true;\n    this.selectedSeats.push(seat);\n  }\n\n  addSeat(seat) {\n    if (this.selectedSeats.length < this.maxSeats) {\n      this.addToSelected(seat);\n    }\n    else {\n      this.removeSeat(0);\n      this.addToSelected(seat);\n    }\n  }\n\n  selectSeat(seat) {\n    var i = 0;\n    var s = seat;\n    var seatIndex = this.getindex(seat);\n    var row = seatIndex.row;\n    var num = seatIndex.num;\n    if (this.selectedSeats.indexOf(s) != -1) {\n      var ind = this.selectedSeats.indexOf(s);\n      this.removeSeat(ind);\n    } else {\n      while (i <= this.maxSeats - 1 && num + i < 25) {\n        if (this.seats[row][num + i].classes[\"no-available\"] || ((num + i) % 10 == 5 && i != 0))\n          break;\n        this.addSeat(this.seats[row][num + i]);\n        i++;\n      }\n    }\n  }\n\n  lockSeats() {\n    if (this.selectedSeats.length == this.maxSeats) {\n      var seats = [];\n      this.selectedSeats.forEach(element => {\n        seats.push({ row: element.row, number: element.number });\n      });\n      var ticket = {\n        seats: seats,\n        name: this.name,\n        id: this.email,\n        date: this.date\n      }\n      console.log(ticket);\n      this.http.lockSeat(ticket).subscribe(\n        data => {\n          console.log(data);\n          this.tss.setTicket(data);\n          this.tss.setStatus(paths.lockedStatus);\n          this.router.navigate([paths.paymentPath]);\n        },\n        error => {\n          alert(\"Cannot Book!!!\" + error.error.error);\n\n        });\n    }\n    else {\n      this.isSelected = true;\n    }\n  }\n  \n  changeDate() {\n    this.chengedVal();\n    this.resetSeats();\n    //console.log(this.date);\n    this.http.getUnavailableSeats(this.date).subscribe(data => data[\"data\"].forEach(element => {\n      this.seats[element.row][element.number].classes[\"no-available\"] = true;\n    }));\n  }\n\n  seatHovered(seat) {\n\n    var i = 0;\n    var seatIndex = this.getindex(seat)\n    var row = seatIndex.row, num = seatIndex.num;\n    while (i <= this.maxSeats - 1 && num + i < 25) {\n      if (this.seats[row][num + i].classes[\"no-available\"] || ((num + i) % 10 == 5 && i != 0))\n        break;\n      this.seats[row][num + i].classes.selected = true;\n      i++;\n    }\n  }\n\n  seatUnhovered(seat) {\n    var i = 0;\n    var seatIndex = this.getindex(seat)\n    var row = seatIndex.row, num = seatIndex.num;\n    while (i <= this.maxSeats - 1 && num + i < 25) {\n      if (this.selectedSeats.indexOf(this.seats[row][num + i]) == -1)\n        if (this.seats[row][num + i].classes.selected)\n          this.seats[row][num + i].classes.selected = false;\n        else\n          break;\n\n      i++;\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid seats-container p-5\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n            <div class=\\\"card shadow-lg\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12 text-center\\\">\\n                                <i class=\\\"far fa-check-circle fa-7x text-success\\\"></i>\\n                                <br/>\\n                                <h3 class=\\\"text-dark my-5\\\">Hi {{ticket.name}}, your tickets has been confirmed successfully.</h3>\\n                                <h5 class=\\\"text-center\\\">Confirmed Seats:\\n                                        <span *ngFor=\\\"let seat of ticket.seats\\\" class=\\\"badge badge-warning mr-2\\\">{{rowLetter[seat.row]+\\\"-\\\"+(seat.number+1)}}</span>\\n                                        <!--<span class=\\\"badge badge-warning mr-2\\\">B-20</span>\\n                                        <span class=\\\"badge badge-warning mr-2\\\">A-10</span>\\n                                        <span class=\\\"badge badge-warning mr-2\\\">B-20</span>\\n                                        <span class=\\\"badge badge-warning mr-2\\\">B-20</span>-->\\n                                    </h5>\\n                                    <p class=\\\"text-muted\\\">Your will receive tickets confirmation to {{ticket.email}} mailbox. </p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { TicketStoringService } from '../ticket-storing.service';\nimport { paths } from '../Strings/Strings';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n  public ticket;\n  public rowLetter=paths.rowLetter;\n  constructor(private tss:TicketStoringService,private route:ActivatedRoute, public router:Router){}\n  ngOnInit() {\n    this.ticket=this.tss.getTicket();\n    if(this.ticket.ticketID==\"\"){\n      this.router.navigate([paths.seatPath,{noOfSeats:1}]);\n    }\n    \n  }\n  \n  ngOnDestroy(): void {\n    this.tss.resetTicket();\n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketStoringService {\n\n  private ticket={\n    ticketID:null,\n    seats:null,\n    name:null,\n    email:null,\n    status:null\n  };\n\n  resetTicket(){\n    this.ticket.ticketID=null;\n    this.ticket.seats=null;\n    this.ticket.name=null;\n    this.ticket.email=null;\n    this.ticket.status=null;\n  }\n  \n  setStatus(status){\n    this.ticket.status=status;\n  }\n  \n  setTicket(ticket){\n    this.ticket.ticketID=ticket._id;\n    this.ticket.seats=ticket.seats;\n    this.ticket.name=ticket.ownerInfo.name;\n    this.ticket.email=ticket.ownerInfo.id;\n  }\n  \n  getTicket(){\n    return this.ticket;\n  }\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}